name: build publish Test Pypi

on:
  push:
    tags:
      - '*'

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest] # ubuntu-20.04, windows-latest, macos-latest, (macos-11.0)?
        python_minor_version: [8] # 6, 7, 8, 9

    steps:
      # For MacOS, force usage of latest XCode
      #- uses: maxim-lobanov/setup-xcode@v1
      #  with:
      #    xcode-version: latest
      # if: matrix.os == 'macos-latest'



      # For windows, install latest nuget package manager
      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: latest
        if: matrix.os == 'windows-latest'

      - name: Install windows nuget packages
        run: |
          Register-PackageSource -provider NuGet -name nugetRepository -location https://www.nuget.org/api/v2
          Install-Package -Force gsl-msvc-x64
          Install-Package -Force Python3${{matrix.python_minor_version}}
          Install-Package -Force boost-vc142
          Install-Package -Force boost_atomic-vc142
          Install-Package -Force boost_chrono-vc142
          Install-Package -Force boost_date_time-vc142
          Install-Package -Force boost_fiber-vc142
          Install-Package -Force boost_filesystem-vc142
          Install-Package -Force boost_graph-vc142
          Install-Package -Force boost_iostreams-vc142
          Install-Package -Force boost_locale-vc142
          Install-Package -Force boost_log-vc142
          Install-Package -Force boost_log_setup-vc142
          Install-Package -Force boost_regex-vc142
          Install-Package -Force boost_serialization-vc142
          Install-Package -Force boost_system-vc142
          Install-Package -Force boost_thread-vc142
          Install-Package -Force boost_timer-vc142
          Install-Package -Force boost_unit_test_framework-vc142
          Install-Package -Force boost_program_options-vc142
          Install-Package -Force boost_python3${{matrix.python_minor_version}}-vc142
          Install-Package -Force boost_wserialization-vc142
          Install-Package -Force boost_zlib-vc142
        shell: powershell

      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.${{matrix.python_minor_version}}'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==1.6.3 twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}

          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BUILD: 'cp3${{matrix.python_minor_version}}-manylinux* cp3${{matrix.python_minor_version}}-macosx_x86_64 cp3${{matrix.python_minor_version}}-win_amd64'
          CIBW_BEFORE_BUILD_WINDOWS: 'choco install wget && wget http://www.met.reading.ac.uk/clouds/adept/adept-2.0.5.tar.gz && tar -xvf adept-2.0.5.tar.gz'
          # We add `brew reinstall python` so that it installs python but with
          CIBW_BEFORE_BUILD_MACOS: 'brew update && brew install gcc gsl boost boost-python3 && wget http://www.met.reading.ac.uk/clouds/adept/adept-2.0.5.tar.gz && tar -xvf adept-2.0.5.tar.gz && cd adept-2.0.5/ && ./configure && make -j2 && make install && cd include && ./create_adept_source_header && cp adept_source.h /usr/local/include/'
          CIBW_BEFORE_ALL_LINUX: 'yum update && yum install -y wget epel-release gsl gsl-devel && wget https://dl.bintray.com/boostorg/release/1.73.0/source/boost_1_73_0.tar.gz > /dev/null 2>&1 && tar -xzf boost_1_* && cd boost_1_* && ./bootstrap.sh && echo "using gcc ;" > project-config.jam && echo "project : default-build <toolset>gcc ;" >> project-config.jam && echo "import python ;" >> project-config.jam &&   echo "using python    : 3.${{matrix.python_minor_version}}    :  /opt/python/cp3${{matrix.python_minor_version}}-cp3${{matrix.python_minor_version}}/bin/python    : /opt/python/cp3${{matrix.python_minor_version}}-cp3${{matrix.python_minor_version}}/include/python3.${{matrix.python_minor_version}}/    : /opt/python/cp3${{matrix.python_minor_version}}-cp3${{matrix.python_minor_version}}/lib/python3.${{matrix.python_minor_version}}/ ;" >> project-config.jam && ./b2 install -j 8 --with=all > /dev/null 2>&1 && cd ~ && wget http://www.met.reading.ac.uk/clouds/adept/adept-2.0.5.tar.gz && tar -xvf adept-2.0.5.tar.gz && cd adept-2.0.5/ && ./configure && make -j2 && make install && cd include && ./create_adept_source_header && cp adept_source.h /usr/local/include/'

        run: |
          python -m cibuildwheel --output-dir distribution
          python -m twine upload --repository testpypi distribution/*

        continue-on-error: true
