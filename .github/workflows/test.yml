name: Coveralls

on: ["pull_request"]

jobs:
  test:
    name: "Package ${{ matrix.os }} | CP 3.${{matrix.python_minor_version}}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python_minor_version: [8]
    steps:

########################################################################################################################

      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: "[All] Install Python 3.${{matrix.python_minor_version}}"
        with:
          python-version: '3.${{matrix.python_minor_version}}'

########################################################################################################################

      - name: "Install system dependencies"
        run: |
          sudo apt install -y gcc-9 g++-9 cmake
          sudo apt install -y openmpi-bin libopenmpi-dev
          sudo apt install -y libboost-all-dev libboost-mpi-dev libboost-mpi-python-dev
          sudo apt install -y libopenblas-dev liblapack-dev
          sudo apt install -y libgsl-dev
          sudo apt install -y python3 python-dev python3-pip
          sudo apt install -y python3-setuptools
          sudo apt-get install -y autoconf

      - name: "Install Python dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: "Install Adept"
        run: |
          sudo apt-get install -y wget
          wget http://www.met.reading.ac.uk/clouds/adept/adept-2.0.5.tar.gz
          tar -xvf adept-2.0.5.tar.gz
          cd adept-2.0.5/
          ./configure && make -j2 && sudo make install
          cd include && ./create_adept_source_header
          sudo cp adept_source.h /usr/local/include/
          cd ../..

      - name: "Compile"
        run: |
          sudo ln -s /usr/bin/gcc-9 /usr/local/bin/gcc
          sudo ln -s /usr/bin/g++-9 /usr/local/bin/g++
          gcc -v && g++ -v && cmake --version
          export CC=/usr/bin/gcc-9
          export CXX=/usr/bin/g++-9
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE="Debug" -DCONFIGURATION_SHARED=1 -DWITH_TESTS=1 ..
          make -j2
        continue-on-error: true

      - name: "Run the test"
        run: |
          make test

      - name: "Run lcov"
        run: |
          sudo apt install -y lcov
          mkdir -p coverage
          lcov -c --directory . --output-file coverage/lcov.info
          pwd

      - name: "Publish to Coveralls"
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
